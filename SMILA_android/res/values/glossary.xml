<?xml version="1.0" encoding="utf-8"?>
<resources>
    
<string name="GL_Action">Action</string>
<string name="GL_TXT_Action">An action is one step in an asynchronous workflow associated with a certain worker that does the actual processing.</string>
<string name="GL_Attachment">Attachment</string>
<string name="GL_TXT_Attachment">Attachments are parts of records used to store large binary data such as document content.</string>
<string name="GL_Attribute">Attribute</string>
<string name="GL_TXT_Attribute">Attributes are parts of records and contain simple data objects that are easily represented in XML or json, such as String, Integer, Float, and Date.</string>
<string name="GL_Blackboard">Blackboard</string>
<string name="GL_TXT_Blackboard">or blackboard service - The blackboard service manages SMILA records during processing in a SMILA component (connectivity, workflow processor). In addition it hides the handling of record persistence from these components. For a complete description see Usage of Blackboard Service.</string>
<string name="GL_BPEL">BPEL</string>
<string name="GL_TXT_BPEL">BPEL is an XML-based language defining several constructs to write business processes. It defines a set of basic control structures like conditions or loops as well as elements to invoke web services and receive messages from services. It relies on WSDL to express web services interfaces. Message structures can be manipulated, assigning parts or the whole of them to variables that can in turn be used to send other messages.</string>
<string name="GL_Bucket">Bucket</string>
<string name="GL_TXT_Bucket">Data container in an asynchronous workflow, containing logically grouped data objects of the same type. Can be transient for interim data, which means that data is not persisted and removal of data is under job management control, or persistent, which means that removal of data is not under job management control.</string>
<string name="GL_Bulk">Bulk</string>
<string name="GL_TXT_Bulk">a number of records bundled in a single file to enhance throughput when processing records in asynchronous workflows.</string>
<string name="GL_Bulkbuilder">Bulkbuilder</string>
<string name="GL_TXT_Bulkbuilder">An asynchronous workflow worker that accepts single records and combines them to a bulk. See Bulkbuilder documentation.</string>
<string name="GL_Crawler">Crawler</string>
<string name="GL_TXT_Crawler">A crawler is a special worker in an asynchronous workflow that imports data from a data source (e.g. filesystem, web or database) into SMILA. It iterates over the data elements and creates records for all elements that will be further processed in the workflow. In general crawlers resp. crawl workflows are used for initial (bulk) import of data sources. (see SMILA Importing for more details)</string>
<string name="GL_Data_Object">Data Object</string>
<string name="GL_TXT_Data_Object">The smallest unit of data handled by an asychronous workflow (e.g. a record bulk ).</string>
<string name="GL_DeltaChecker">DeltaChecker</string>
<string name="GL_TXT_DeltaChecker">The DeltaChecker is a worker in an (asynchronous) import workflow that handles the delta indexing.</string>
<string name="GL_Delta_indexing">Delta indexing</string>
<string name="GL_TXT_Delta_indexing">Delta indexing is also known as incremental or generation based indexing. It is driven by DeltaChecker worker.(see SMILA Importing for more details)</string>
<string name="GL_Eclipse">Eclipse</string>
<string name="GL_TXT_Eclipse">Eclipse is an open source community, whose projects are focused on building an open development platform comprised of extensible frameworks, tools and runtimes for building, deploying and managing software across the lifecycle.</string>
<string name="GL_EILF">EILF</string>
<string name="GL_TXT_EILF">EILF (Enterprise Information Logistics Framework) was the original proposed name of SMILA. Since this abbreviation was difficult to pronounce, it was not accepted by the community and thus changed to SMILA.</string>
<string name="GL_Equinox">Equinox</string>
<string name="GL_TXT_Equinox">Equinox is a base technology from Eclipse implementing the OSGi specification. Not only delivering a high performance class loading mechanism Equinox also provides an environment for managing component dependencies.</string>
<string name="GL_Fetcher">Fetcher</string>
<string name="GL_TXT_Fetcher">A fetcher is a worker in an (asynchronous) import workflow that retrieves Records containing an URL or file path, etc from a crawler and actually fetches the content (e.g. of files) from the data source ((e.g. FileFetcherWorker or WebFetcherWorker )), attaches it to records and sends them to the UpdatePusher. (see SMILA Importing for more details)</string>
<string name="GL_ID">ID</string>
<string name="GL_TXT_ID">An ID identifies a record in SMILA and is part of a record\'s metadata.</string>
<string name="GL_JMX">JMX</string>
<string name="GL_TXT_JMX">Java Management Extension is a specification to administrating and monitoring java applications.</string>
<string name="GL_Job">Job</string>
<string name="GL_TXT_Job">A Job is a description of a distinct and repeatable working process that the system should accomplish. It references and parametrizes an asynchronous workflow.</string>
<string name="GL_Job_Run">Job Run</string>
<string name="GL_TXT_Job_Run">A Job Run is an "instance" of a Job, for example one run of an import of a data source to an index. Only one active job run can existe per job. Statistics will be accumulated for each job run. A job run is automatically stopped when SMILA shuts down.</string>
<string name="GL_Micro_bulk">Micro bulk</string>
<string name="GL_TXT_Micro_bulk">a (small) bundle of records in one single file which can be pushed into the system using the Bulkbuilder. The micro bulk in itself is not JSON, but a file where each line must consist of a single JSON representation of a record. E.g.:</string>
<string name="GL_ODE">ODE</string>
<string name="GL_TXT_ODE">Apache ODE (Orchestration Director Engine) executes business processes following the BPEL / WS-BPEL standard. It talks to web services, sending and receiving messages, handling data manipulation and error recovery as described by your process definition. It supports both long and short living process executions to orchestrate all the services that are part of your application.</string>
<string name="GL_OSGi">OSGi</string>
<string name="GL_TXT_OSGi">The OSGi specification is about managing a component based software system. It defines an in-VM Service Oriented Architecture (SOA) for networked systems. An OSGi Service Platform provides a standardized, component-oriented computing environment for cooperating networked services. This architecture significantly reduces the overall complexity of building, maintaining, and deploying applications.</string>
<string name="GL_Pipelet">Pipelet</string>
<string name="GL_TXT_Pipelet">A pipelet is a reusable component (POJO) in a BPEL workflow used to process data contained in records. See Pipelets for details.</string>
<string name="GL_Pipeline">Pipeline</string>
<string name="GL_TXT_Pipeline">A pipeline is the definition of a BPEL process (or workflow) that orchestrates pipelets and other BPEL services (e.g. web services).</string>
<string name="GL_Record">Record</string>
<string name="GL_TXT_Record">A record is a sole element in SMILA that contains data to process (e.g. content and metadata of a document). The record consists of metadata elements, see SMILA/Documentation/Data_Model_and_Serialization_Formats.</string>
<string name="GL_Record_Bulk">Record Bulk</string>
<string name="GL_TXT_Record_Bulk">a Data Object containing a sequence of Records</string>
<string name="GL_Slot">Slot</string>
<string name="GL_TXT_Slot">An (input/output) slot is a description for the input/output behaviour of a worker. In a concrete asynchronous workflow slots are assigned to buckets</string>
<string name="GL_SNMP">SNMP</string>
<string name="GL_TXT_SNMP">Simple Network Management Protocol is a network protocol which controls the communication between supervised devices and the monitoring application (e.g. JMX ).</string>
<string name="GL_Task">Task</string>
<string name="GL_TXT_Task">Description of a single unit of work to be processed by a Worker. A task can contain worker specific properties.</string>
<string name="GL_Tika">Tika</string>
<string name="GL_TXT_Tika">The Apache Tikaâ„¢ toolkit detects and extracts metadata and structured text content from various documents using existing parser libraries</string>
<string name="GL_UpdatePusher">UpdatePusher</string>
<string name="GL_TXT_UpdatePusher">The UpdatePusher is a worker in an (asynchronous) import workflow that pushes the crawled records to the BulkBuilder of a running import job.</string>
<string name="GL_Worker">Worker</string>
<string name="GL_TXT_Worker">Single processing component in an asychnronous workflow. Pulls tasks to process. Defined in a worker description.</string>
<string name="GL_Worker_Description">Worker Description</string>
<string name="GL_TXT_Worker_Description">Description of a worker, e.g. its input/output slots.</string>
<string name="GL_Workflow__asynchronous_">Workflow (asynchronous)</string>
<string name="GL_TXT_Workflow__asynchronous_">Describes an asynchronously processed workflow by specifying a sequence of workers and associating their input/output slots to buckets.</string>
<string name="GL_Workflow__synchronous_BPEL_">Workflow (synchronous/BPEL)</string>
<string name="GL_TXT_Workflow__synchronous_BPEL_">see pipeline</string>
<string name="GL_Workflow_run">Workflow run</string>
<string name="GL_TXT_Workflow_run">Single traversal of a workflow.</string>
<string name="GL_WSDL">WSDL</string>
<string name="GL_TXT_WSDL">WSDL is an XML format for describing network services as a set of endpoints operating on messages containing either document-oriented or procedure-oriented information. The operations and messages are described abstractly, and then bound to a concrete network protocol and message format to define an endpoint. Related concrete endpoints are combined into abstract endpoints (services). WSDL is extensible to allow description of endpoints and their messages regardless of what message formats or network protocols are used to communicate.</string>
<string name="GL_WS_BPEL">WS-BPEL</string>
<string name="GL_TXT_WS_BPEL">see BPEL</string>
<string name="__GLOSSARY_TERM_ID__">__GLOSSARY_TERM__</string>

</resources>
